ligandMPNN+FR
GRL 05/19/22
Acknowledgement
#MPNN part copied and simplified from Justas's ligand_proteinmpnn/protein_mpnn_run.py. (skipping the parts related to native seq. seq recovery,..etc)                                                                                                                      
#MPNN-FR concept and some format borrowed from Nate B and bcov's PPI  mpnn-FR script                                                       
 
Working dir: /home/gyurie/mpnn_ligand/dl_design_scripts/
Need pytorch and pyrosetta (Using Ivan’s python3.7 environment for now; /home/aivan/.conda/envs/SE3-a6000)
Main script:   ligMPNN_FR.py
                      ligMPNN_repack_fast.py*   (This is the same but will do packrotamers-minimization for all cycles. TINY BIT faster :D  Maybe can use it as a predictor with cycle=1 ?)
 
It will use: gen_prot_lig_dist_cst.py   for generating ligand atom to protein binding site residue CA distance constraints
                  xml_relax_after_ligMPNN.py   xml content to do packrotamer-min or fastrelax   
               (If you want to modify the rosetta protocol you can change this xml)
Outputs: will write in out_folder the ligand-protein CA distance constraint file, score dataframe with key filter metrics in csv format, and  the final pdbs 
 
**Kept most of the MPNN optional inputs (like checkpoint, temperature, fix residue, AA bias, omit AA, ..) except for the multi chain-related things, but haven’t tested yet. Should work with the same arguments because I didn’t change
 
Example cmd
source ~/.bashrc; conda activate /home/aivan/.conda/envs/SE3-a6000; python ligMPNN_FR.py --pdb_path test_sro_in.pdb  --ligand_params_path ../inf_example/SRO.params  --out_folder ligMPNN_FR_test --use_ligand 1 --num_seq_per_target 4 --sampling_temp 0.2 --omit_AAs C --ligand_genpot_params_path SRO_genpot.params --n_mpnn_FR_cycle 2 --repackable_res 14,15,18,26,30,36,37,38,39,43,52,53,55,56,57,59,60,62,64,80,82,84,91,23,95,106,108,110 --target_hb_atms OH,HH,HE1,HZ1,HZ3,HZ4 --dump_pdb 1 --target_atm_for_cst OH,HE1,CH2,CZ3,CE3,CD2,CE2,CZ2,NE1,CD1,CG
 
Args explanation
pdb_path: input pdb with ligand
ligand_params_path: non-genpot params file for the ligand. The residue name should match that in the input pdb. This is ligand MPNN input.
out_folder: where to write the final pdbs
use_ligand: 1 provokes ligand context       (0 might also work. didn’t test- same model but ignoring ligand input)
num_seq_per_target: how many sequences you want to generate with ligandMPNN for your first cycle. Only applies to the first cycle. From the second to final, generate one sequence.
sampling_temp: mpnn temperature
ligand_genpot_params_path: genpot params file. Currently the rosetta xml is set up for genpot.
n_mpnn_FR_cycle: total number of [ligandMPNN-repack or relax] cycles
repackable_res: Intended to be binding site (or core) residues. Except for the final fastrelax cycle, only these residues will be repackable for the packrotamers mover
target_hb_atms: which atoms to use for the hbond filter (the dataframe will have info on how many hbonds were found between this atm and the protein)
dump_pdb: 1 will save all trace pdbs, even the pdbs before relax (threaded mpnn). 0 will save the final pdbs in the output dir (output dir default name is ‘ligMPNN_FR_out’).
target_atm_for_cst: the ligand atom names that will be used to generate distance constraints. The implemented function will look for the closest [repackable_res] CA atom to the atom and will generate a harmonic atompair constraint. Stderr is hard-coded as 0.5 inside but can be changed (constraint weights can be changed in the xml string). When no repackable residues are given, it will look for all the residues (didn’t test if it runs ok yet). The constraint file will be written in the output dir.
 
Example results on one of my inputs
 
/home/gyurie/mpnn_ligand/dl_design_scripts/ligMPNN_FR_test_not_debug
Input: test_sro_in.pdb
cycle0: test_sro_in_FR0_[0-3].pdb (after first cycle)
cycle1: test_sro_in_FR0_[0-3]_FR1_0.pdb (after final fastrelax)
 
Score file: test_sro_in_ligmpnn_fr.csv      #To print out more rosetta scores???
 
Current setup
 
Input complex pdb with ligand params file -> [ligand MPNN (n_seq=num_seq_per_target) -> fast packrotamers + minimization -> ] (iterate this block for n_mpnn_FR_cycle-1 times, from the second cycle will generate one seq for each)  -> [ligand MPNN -> FastRelax for the final cycle]

Things that we can adjust and benchmark for maybe / things to think about
Constraint weights (protein CA coordinates, ligand atm-proteinCA distance)
Relaxation extent (short minimization or full relax ? Would more relax help?)
How many cycles? Not sure if iterating will really help
Do we want to sample more sequences per input?  - probably not
Mpnn temperature - currently in the script default 0.2
There is an option inside (hard-coded) where you can only take the lowest mpnn-score and proceed with repacking, but not provoked by default now.
Use the fast version as a predictor
With a very small number of tests I am observing that the sequences near the ligand become more hydrophobic as the ligMPNN-relaxation iterates… ??

